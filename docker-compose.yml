version: "3"

networks:
  radio:
    external: false

services:
  kawa:
    build:
      context: .
      dockerfile: ./docker/kawa/Dockerfile
      args:
        - KAWA_API_PORT=${KAWA_API_PORT}
        - KAWA_STREAM_PORT=${KAWA_STREAM_PORT}
    container_name: kawa
    environment:
      - KAWA_API_PORT=${KAWA_API_PORT}
      - KAWA_STREAM_PORT=${KAWA_STREAM_PORT}
      - KAWA_STREAM_NAME=${KAWA_STREAM_NAME}
      - KAWA_RANDOM_SONG_URL=${KAWA_RANDOM_SONG_URL}
      - KAWA_NOW_PLAYING_URL=${KAWA_NOW_PLAYING_URL}
      - KAWA_NEXT_RANDOM_URL=${KAWA_NEXT_RANDOM_URL}
      - DEFAULT_API_KEY=${DEFAULT_API_KEY}
    restart: always
    networks:
      - radio
    volumes:
      - ${DATA_MOUNT_PATH}:${DATA_MOUNT_PATH}:ro
    depends_on:
      - api

  api:
    build:
      context: .
      dockerfile: ./docker/stewdio-api/Dockerfile
      args:
        - STEWDIO_API_PORT=${STEWDIO_API_PORT}
    container_name: api
    environment:
      - KAWA_API_PORT=${KAWA_API_PORT}
      - DEFAULT_API_KEY=${DEFAULT_API_KEY}
      - ACOUSTID_API_KEY=${ACOUSTID_API_KEY}
      - STEWDIO_API_PORT=${STEWDIO_API_PORT}
      - STEWDIO_API_THREADS=${STEWDIO_API_THREADS}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DATA_MOUNT_PATH=${DATA_MOUNT_PATH}
    restart: always
    networks:
      - radio
    volumes:
      - ${DATA_MOUNT_PATH}:${DATA_MOUNT_PATH}:ro
    depends_on:
      - db

  fpm:
    build:
      context: .
      dockerfile: ./docker/fpm/Dockerfile
      args:
        - STEWDIO_API_PORT=${STEWDIO_API_PORT}
        - SITE_HOSTNAME=${SITE_HOSTNAME}
        - DEFAULT_API_KEY=${DEFAULT_API_KEY}
        - LASTFM_API_KEY=${LASTFM_API_KEY}
        - DB_USER=${DB_USER}
        - DB_PASSWORD=${DB_PASSWORD}
        - DB_NAME=${DB_NAME}
        - DB_NAME_TORRENTS=${DB_NAME_TORRENTS}
    container_name: fpm
    restart: always
    networks:
      - radio
    volumes:
      - ${DATA_MOUNT_PATH}:${DATA_MOUNT_PATH}:ro
    depends_on:
      - db
      - api

  bot:
    build:
      context: .
      dockerfile: ./docker/radio-ircbot/Dockerfile
      args:
        - STEWDIO_API_PORT=${STEWDIO_API_PORT}
        - KAWA_STREAM_PORT=${KAWA_STREAM_PORT}
        - KAWA_API_PORT=${KAWA_API_PORT}
        - DATA_MOUNT_PATH=${DATA_MOUNT_PATH}
        - SITE_HOSTNAME=${SITE_HOSTNAME}
        - DEFAULT_API_KEY=${DEFAULT_API_KEY}
        - DB_USER=${DB_USER}
        - DB_PASSWORD=${DB_PASSWORD}
        - DB_NAME=${DB_NAME}
        - DB_NAME_TORRENTS=${DB_NAME_TORRENTS}
        - IRC_SERVER_HOST=${IRC_SERVER_HOST}
        - IRC_SERVER_PORT=${IRC_SERVER_PORT}
        - BOT_USE_SATSUKI=${BOT_USE_SATSUKI}
        - BOT_USER=${BOT_USER}
        - BOT_NICK=${BOT_NICK}
        - BOT_PASSWORD=${BOT_PASSWORD}
        - BOT_KEYID=${BOT_KEYID}
        - BOT_RADIO_CHANNEL=${BOT_RADIO_CHANNEL}
        - BOT_NP_CHANNEL=${BOT_NP_CHANNEL}
    restart: always
    container_name: bot
    networks:
      - radio
    volumes:
      - ./data/cache:/cache:rw
      - ./data/shares:/shares:rw
      - ${DATA_MOUNT_PATH}:${DATA_MOUNT_PATH}:ro
    depends_on:
      - api
      - kawa

  nginx:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
      args:
        - STEWDIO_API_PORT=${STEWDIO_API_PORT}
        - SITE_HOSTNAME=${SITE_HOSTNAME}
        - KAWA_STREAM_PORT=${KAWA_STREAM_PORT}
        - DATA_MOUNT_PATH=${DATA_MOUNT_PATH}
    restart: always
    container_name: nginx
    networks:
      - radio
    volumes:
      - ./data/shares:/shares:ro
      - ${DATA_MOUNT_PATH}:${DATA_MOUNT_PATH}:ro
    ports:
      - "${SITE_PORT}:443"
    depends_on:
      - fpm
      - kawa

  db:
    image: postgres:13.2
    restart: always
    container_name: db
    shm_size: 1g
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_MULTIPLE_DATABASES="${DB_NAME}","${DB_NAME_TORRENTS}"
      - DB_NAME_TORRENTS=${DB_NAME_TORRENTS}
    networks:
      - radio
    ports:
      - "${SITE_DB_PORT}:5432"
    volumes:
      - ./docker/postgres/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./docker/postgres/init:/docker-entrypoint-initdb.d:ro
      - ./docker/postgres/schema:/schema:ro
      - ./data/db:/var/lib/postgresql/data:rw